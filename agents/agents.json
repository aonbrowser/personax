{
  "agents": [
    {
      "name": "rc-orchestrator",
      "description": "Relate Coach master coordinator for all development tasks",
      "model": "opus",
      "primary": true,
      "capabilities": ["task_delegation", "coordination", "planning"]
    },
    {
      "name": "rc-backend-architect",
      "description": "Relate Coach Node.js/Express API architecture and design",
      "model": "opus",
      "capabilities": ["api_design", "service_architecture", "database_schema"]
    },
    {
      "name": "rc-typescript-specialist",
      "description": "Relate Coach advanced TypeScript development and type safety",
      "model": "opus",
      "capabilities": ["type_systems", "generics", "type_safety"]
    },
    {
      "name": "rc-react-native-expert",
      "description": "Relate Coach React Native/Expo cross-platform development",
      "model": "opus",
      "capabilities": ["mobile_ui", "cross_platform", "expo_config"]
    },
    {
      "name": "rc-database-specialist",
      "description": "Relate Coach PostgreSQL optimization and multi-language storage",
      "model": "opus",
      "capabilities": ["query_optimization", "migrations", "indexing"]
    },
    {
      "name": "rc-ai-integration-expert",
      "description": "Relate Coach OpenAI API integration and prompt engineering",
      "model": "opus",
      "capabilities": ["openai_api", "prompt_engineering", "language_validation"]
    },
    {
      "name": "rc-code-reviewer",
      "description": "Relate Coach code quality, security, and performance review",
      "model": "opus",
      "capabilities": ["security_review", "performance_analysis", "best_practices"]
    },
    {
      "name": "rc-test-engineer",
      "description": "Relate Coach test automation and quality assurance",
      "model": "opus",
      "capabilities": ["unit_testing", "integration_testing", "e2e_testing"]
    }
  ],
  "configuration": {
    "default_model": "opus",
    "parallel_execution": true,
    "max_concurrent_agents": 4,
    "communication_protocol": "structured_json",
    "quality_gates": {
      "typescript_strict": true,
      "min_test_coverage": 80,
      "code_review_required": true,
      "security_scan": true
    }
  },
  "project_context": {
    "name": "Relate Coach",
    "type": "Multi-language Personality Assessment Platform",
    "stack": {
      "backend": ["Node.js", "Express", "TypeScript", "PostgreSQL"],
      "frontend": ["React Native", "Expo", "TypeScript"],
      "ai": ["OpenAI API", "GPT-4", "GPT-3.5"],
      "infrastructure": ["Docker", "PostgreSQL", "Node.js"]
    },
    "languages": ["en", "es", "fr", "de", "it", "pt", "nl", "ru", "zh", "zh-tw", "ja", "ko", "ar", "tr", "hi"],
    "features": [
      "Multi-language support",
      "Personality analysis",
      "Relationship coaching",
      "Cross-platform mobile/web",
      "AI-powered insights"
    ]
  }
}